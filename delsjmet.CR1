
'Version 5.5
'Last Modified: May 01, 2014 by Michael G. Mensinger
'Changed PAR multiplier to 1.652324 on Line 372

'Last Modified: November 04, 2013 by Michael G. Mensinger
'Installed brand new CS106 barometric Pressure sensor (s/n: J406004)
'Changed line 103 AND 346 from CS105 To CS106
'Changed code in program line 348 from 0.184 To 0.240 and 600 to 500

'Last Modified: April 25, 2013 by Michael G. Mensinger
'Changed PAR multiplier to 1.642489 on Line 364
'Installed new HC2S3 Temp/RH Sensor and changed sensor code on Line 337 from 
'Delay(0,150,mSec) to Delay (0,3,Sec)

'Version 5.5
'Last Modified: April 12, 2012 by Michael G. Mensinger
'Changed PAR multiplier to 1.616825

'Version 5.5
'Last Modified: April 04, 2011 by Michael G. Mensinger
'Changed PAR multiplier entry process from being entered into the Public table back to 
'being entered directly into the program. PAR multipler for the April 4th PAR sensor change
'was entered as 1.591951.

'VERSION 5.5
'Last Modified: March 26, 2008 by Jay Poucher, 

' **** Added Total Solar Radiation Pyranometer code on 3/27/08 ****
' **** Added by:  Kevin Brinson, Delaware Environmental Observing System, kbrinson@udel.edu ****
'Version 5.5 changes, Search for '*** to display these additions
'Added 24 hour rain total (DailyRain) to SWMP table
'Applied a new Field Name for Daily Rain as CumPrcp
'Made GOESDailyRain = DailyRain*1000 output for transmission
'Added Variable GOESDailyRain & GoesPar to public
'Set Units for GOESDailyRain and DailyRain to mm
'Set Units for GOESPar to mmoles/m^2
'Applied a new Field Name for GOESDaily Rain as G_CumPrcp
'Reset DailyRain to Zero at midnight
'Reset GOESDailyRain to Zero at midnight
'Deleted the  If Par < 0 then Par is 0 line as per DMC 2007
'Changed "Day" to "Days" in Alias time(3) due to conflict with new CR1000 Firmware

'Version 4.0 changes:
' Last Modified: Sept 10th, 2007 by Jay Poucher
' Add check on wind speed. If NAN, don't include sample is processing for
' wind vector instruction. Reason: clock set function causing 1 bad wind sample per day
' which causes one bad wind summery per day. Added variable WindGood as boolean, set true
' or false after wind speed pulse read instruction. WindGood is used as the process
' disable variable in the Windvector() function. Search for MOD** to see changes
' Removed Par < 0 line as per DMC 2007
' Added GoesPar for two decimal places in Goes Par Output

'VERSION 3.1
'NERRS weather station program for the Campbell Scientific CR1000 Series Datalogger
'Written on: August 30, 2006
'Author:  Michelle Cordrey
'     mcordrey@tijuanaestuary.org
'Last Modified: September 28, 2006 by Jay Poucher, Search for '*** to display these additions
' 	Made a GOES Daily Rain output for transmission
'		added Variable GOESDailyRain to public
'		Set Units for GOESDailyRain to mm
' 	Added 24 hour rain total (DailyRain) to SWMP and UDEL data tables
'		Put GOESDailyRain in GOES Table in place of DailyRain
'		Made GOESDailyRain = DailyRain*1000
'		Reset DailyRain to Zero at midnight
'		Reset GOESDailyRain to Zero at midnight

'Version 3.0 changes:
' 08/30/2006
'		Changes made as requested by the Data Management Committee:
'		- fiftnmin table name changed to SWMP
'		- Relative humidity min/max, pressure min/max, wind speed min and time fields were dropped
'		- fieldnames instructions added to SWMP data table to generate consistent with cr10x/CDMO fieldnames
'		- RHumidity > 100 and PAR < 0 instructions dropped, over or under values will be handled post processing
'		- subroutine now used to generate min/max values and timestamps for both SWMP and GOESOUT tables
'		Additonal changes made:
'		- revision of variable names within program for consistency and improved readability
'		- Units instructions were added to enable output of parameter units in data table headers
'				when using TOA5 long header ASCII download format
' 09/12/2006
'		- Added colon to max/min timestamps in SWMP table
'		- Added fieldnames instructions to GOES table (GOES field names same as SWMP with 'G_' prepended)
'	Changed the HMP45C from a control port to a switched 12V port
' 09/13/2006
'		CHANGED DELAWARE SPECIFIC SETTINGS:
'		 - added 5 min table named UDEL which measures:
'					temperature, relative humidity, pressure, wind speed and direction, ppt and PAR

'NERRS Site: Delaware Reserve
'Location: Dover, DE
'Site: St Jones River
'NESDIS Assignments:
'ID=3B00F7FE
'Transmit Time = 40:10
'ST MsgWindow = 10 sec
'ST Channel = 143
'ST BPS = 300
'Random Channel = 0
'Random BPS = 0
'ST Repeat Interval = 1 hour
'ST Offset = 40 minute, 10 secs
'Random Repeat Interval = 0 hour

'Sensor list: (ports used)
'HMP45AC (7-wire) Temperature & Relative Humidity  (se1 se2 c1)
'Campbell	CS106 (PTB110) Barometric Pressure Sensor (se3)
'RM Young 5103 Wind Speed & Direction Sensor (p1 se4 ex1)
'Texas Electronics TR-525I Rain Gauge (p2)
'LI190SZ Quantum Sensor (diff3 == se5 se6)
'LI200X Total Solar Pyranometer (diff4 == se7 se8) - Added by KRB (DEOS) 3/27/08
'***REMEMBER TO SET MULTIPLIER IN PUBLIC TABLE****

'Holds Sensor Calibration Settings for Easy Access in the Numeric Display
PreserveVariables

'For Easy Site Identification in the Data Header (Parseable)
' 	NOTE: this instruction is probably not doing anything as the
'		variable is stored in the status table but never called
StationName (DELSJMET)

'Time offset for GMT time
'http://wwp.greenwichmeantime.com/
Const GMTOFFSET=5

'''Declare Public Variables
'  Parameters directly sampled by sensors
Public AirTemp, RHumidity, Pressure, WindSpd, WindDir, Precip, PAR, Batt, WindGood As Boolean'MOD**
Public pTempC, Solar, DailyRain '***
'Public TotalRad, totRadMultiplier 		'uncomment if total radiation sensor installed (remember to add to tables)
'Public EppleyPyr, eppMultiplier 'uncomment if eppley pyrometer is installed
'EnclosureRH 	     'uncomment if relative humidity sensor installed in enclosure

' GOES output variables
Public goesSetResult,goesFailures,gpsLoc(6),gpsTime(7)

' Variables used in max and min subroutine and to calculate timestamps
Public atMax,atMaxTime,atMin,atMinTime,wsMax,wsMaxTime
Public atMaxTimeSwmp As String,atMinTimeSwmp As String,wsMaxTimeSwmp As String

' Variables used for integer translations in the GOES Output
Public goesAT,goesATMax,goesATMin,goesRH,goesBP,goesWS,goesWD,goesWSD,goesWSMax,goesPar,goesPrecip,goesBatt,goesDailyRain '***

Public Time(9) 'array to store time

'''Define aliases to give array fields more readable names:
Alias Time(1) = Year
Alias Time(2) = Month
Alias Time(3) = Days
Alias Time(4) = Hour
Alias Time(5) = Minute
Alias Time(6) = Second
Alias Time(7) = Microsecond
Alias Time(8) = DayofWeek
Alias Time(9) = DayofYear

Alias gpsTime(1) = gYear
Alias gpsTime(2) = gMonth
Alias gpsTime(3) = gDay
Alias gpsTime(4) = gHour
Alias gpsTime(5) = gMinute
Alias gpsTime(6) = gSecond
Alias gpsTime(7) = gMicroSecond

Alias gpsLoc(1) = gpsResult 	'GOESgps instruction result code
Alias gpsLoc(2) = gpsSeconds 	'seconds since Jan 1, 2000
Alias gpsLoc(3) = gpsLat  		'Fractional degrees; 100 nanodegree resolution
Alias gpsLoc(4) = gpsLon			'Fractional degrees; 100 nanodegree resolution
Alias gpsLoc(5) = gpsElev  		'Signed 32-bit number, in centimeters
Alias gpsLoc(6) = gpsMagElev  'Fractional degrees; 1 millidegree resolution

'''Define units for SWMP data table output
Units AirTemp = C
Units atMax = C
Units atMin = C
Units RHumidity = %
Units Pressure = mb
Units WindSpd = m/s
Units WindDir = deg
Units	Precip = mm
Units PAR = mmoles/m^2
Units Batt = Volts
Units DailyRain = mm '***

' Define units of max/min timestamps used in SWMP table
Units atMaxTimeSwmp = hhmm
Units atMinTimeSwmp = hhmm
Units wsMaxTimeSwmp = hhmm

' Define units of max/min timestamps used in GOES table
Units atMaxTime = hhmm
Units atMinTime = hhmm
Units wsMaxTime = hhmm

' Define units for GOES data table output
Units goesAT = C
Units goesATMax = C
Units goesATMin = C
Units goesRH = %
Units goesBP = mb
Units goesWS = m/s
Units goesWD = Deg
Units goesWSD = m/s
Units goesWSMax = m/s
Units goesPrecip = mm
Units goesBatt = Volts
Units goesDailyRain = mm '***
Units goesPar = mmoles/m^2 '***

'''Define Data Tables:
' The SWMP data table definition:
DataTable (SWMP,1,-1)
	DataInterval (0,15,min,10)
	Average (1,AirTemp,IEEE4,False)
	FieldNames("ATemp") 'instruction is used to output desired fieldnames in output table headers
	Sample (1,atMax,IEEE4)
	FieldNames("MaxTemp")
	Sample (1,atMaxTimeSwmp,String)
	FieldNames ("MaxTempT")
	Sample (1,atMin,IEEE4)
	FieldNames("MinTemp")
	Sample (1,atMinTimeSwmp,String)
	FieldNames("MinTempT")
	Average (1,RHumidity,IEEE4,False)
	FieldNames("RH")
	Average (1,Pressure,IEEE4,False)
	FieldNames("BP")
	WindVector (1,WindSpd,WindDir,IEEE4,WindGood,0,0,0)'MOD**
	FieldNames("WSpd,Wdir,SDWDir")
	Sample (1,wsMax,IEEE4)
	FieldNames("MaxWSpd")
	Sample (1,wsMaxTimeSwmp,String)
	FieldNames("MaxWSpdT")
	Totalize (1,Precip,IEEE4,False)
	FieldNames("TotPrcp")
	Totalize(1,PAR,IEEE4,False)
	FieldNames("TotPAR")
	Average (1,Batt,IEEE4,False)
	FieldNames("AvgVolt")
	Sample(1,DailyRain,IEEE4) '***
	FieldNames("CumPrcp") '***
EndTable

' The Goes Output Data Table Def
DataTable (GOESOUT,1,-1)
	DataInterval (0,15,min,10)
	Average(1,goesAT,IEEE4,False)
	FieldNames("G_ATemp")
	Sample(1,goesATMax,IEEE4)
	FieldNames("G_MaxTemp")
	Sample(1,atMaxTime,IEEE4)
	FieldNames("G_MaxTempT")
	Sample(1,goesATMin,IEEE4)
	FieldNames("G_MinTemp")
	Sample(1,atMinTime,IEEE4)
	FieldNames("G_MinTempT")
	Average (1,goesRH,IEEE4,False)
	FieldNames("G_RH")
	Average (1,goesBP,IEEE4,False)
	FieldNames("G_BP")
	Sample (1,goesWS,IEEE4)
	FieldNames("G_WSpd")
	Sample (1,goesWD,IEEE4)
	FieldNames("G_Wdir")
	Sample (1,goesWSD,IEEE4)
	FieldNames("G_SDWDir")
	Sample(1,goesWSMax,IEEE4)
	FieldNames("G_MaxWSpd")
	Sample(1,wsMaxTime,IEEE4)
	FieldNames("G_MaxWSpdT")
	Totalize (1,goesPrecip,IEEE4,False)
	FieldNames("G_TotPrcp")
	Totalize (1,goesPar,IEEE4,False)
	FieldNames("G_TotPAR")
	Average (1,goesBatt,IEEE4,False)
	FieldNames("G_AvgVolt")
	Sample(1,goesDailyRain,IEEE4) '***
	FieldNames("G_CumPrcp") '***
EndTable

' Delaware site specific table:
DataTable (UDEL, 1, -1)
	DataInterval (0,5,min,10)
	Average(1,AirTemp,IEEE4,False)
	Average(1,RHumidity,IEEE4,False)
	Average(1,Pressure,IEEE4,False)
	WindVector(1,WindSpd,WindDir,IEEE4,WindGood,0,0,0)'MOD**
	Maximum(1,WindSpd,IEEE4,False,True) 'timestamp format is: mm/dd/yyyy hh:mm:ss
	Totalize(1,Precip,IEEE4,False)
	Totalize(1,PAR,IEEE4,False)
	Sample(1,DailyRain,IEEE4) '***
	Average(1,Solar,IEEE4,False)
EndTable


'''Subroutines:
' Sub to calculate max/min and timestamps for SWMP table (goes integer values are derived from)
Sub MaxMin
	If AirTemp < atMin Then 	'Track Min and time of Min air temp
		atMin = AirTemp
		RealTime(Time())
		atMinTime = Hour*100+Minute 'time formatted as integer for GOES table
		atMinTimeSwmp = Hour + ":" + Minute 'time formatted as string for SWMP table
	EndIf
	If AirTemp > atMax Then	'Track Max and time of Max air temp
		atMax = AirTemp
		RealTime(Time())
		atMaxTime = Hour*100+Minute
		atMaxTimeSwmp = Hour + ":" + Minute
	EndIf
	If WindSpd > wsMax Then	'Track Max and time of max wind
		wsMax = WindSpd
		RealTime(Time())
		wsMaxTime = Hour*100+Minute
		wsMaxTimeSwmp = Hour + ":" + Minute
	EndIf
EndSub

' Sub to setup for the GOES TX312 transmitter
Sub setup
	GOESSetup (goesSetResult,&H3B00F7FE,10,152,300,0,100,"0_1_0_0","0_40_10","0_0_0")
EndSub

'Main Program
BeginProg
	'Initialize Min & Max Variables
	atMin = 20000
	atMax = -20000
	wsMax = -20000
	'initialize so goes setup subroutine will be called on first run of program
	goesSetResult = -1
	'Scan Rate
	Scan (5,Sec,0,0)

		'''Begin sensor settings

		'Reference Temperature and Battery Voltage measurements
		'"PTempC" in C and "Batt" in Volts:
		PanelTemp (pTempC,250)
		Battery (Batt)

		'HC2S3 Temperature & Relative Humidity Sensor measurements
		'"AirTemp" in C & "RHumidity" in %:
		PortSet(9,1)
		Delay(0,3,Sec)
		VoltSe(AirTemp,1,mV2500,1,0,0,_60Hz,0.1,-40.0)
		VoltSe(RHumidity,1,mV2500,2,0,0,_60Hz,0.1,0)
		PortSet(9,0)

		'CS106 (continuous power mode) Barometric Pressure Sensor measurement
		'"Pressure" in mb
		VoltSe(Pressure,1,mV2500,3,1,0,_60Hz,0.240,500.0)

		'05103 Wind Speed & Direction Sensor measurements
		'"WindSpd" in mps and "WindDir" in degrees:
		PulseCount(WindSpd,1,1,1,1,0.098,0)
		If WindSpd = NAN Then'MOD**
			WindGood = true'MOD**
		Else'MOD**
			WindGood = false'MOD**
		EndIf'MOD**
		BrHalf(WindDir,1,mV2500,4,1,1,2500,True,0,_60Hz,355,0)
		If WindDir>=360 Then WindDir=0

		'Texas Electronics TR-525I Rain Gauge measurement
		'"Precip" in mm:
		PulseCount(Precip,1,2,2,0,0.254,0)
		DailyRain = DailyRain+Precip '***

		'LI190SB Quantum Sensor measurements
		'"PAR" in mmoles/m^2:
		VoltDiff(PAR,1,mV25,3,True,0,_60Hz,1.652324,0)

    'LI200X Total Solar Pyranometer measurements
    '"Solar" in W/m^2:
    VoltDiff(Solar,1,mV7_5,4,False,0,_60Hz,200.0,0) 
    
		'''End sensor setttings

		'Reset station clock using GPS clock
		If TimeIntoInterval (722,1440,min) Then	'at two minutes past noon set clock to gps clock
			GOESGPS (gpsloc(),gpsTime())
			if gpsResult=0and gHour<24and gHour>=0and gMinute<60and gMinute>=0and gSecond<60and gSecond>=0 then
				gHour = gHour - GMTOFFSET 'adjust clock in GMT to local time
				if gHour<0 then
					gHour=gHour+24
				endif
				ClockSet (gpsTime())
			Endif
		endif

		call MaxMin		'track airTempMax, airTempMin, wsMax and times

		CallTable SWMP

		'Convert and store as integers for GOES transmission (only those not already integers)
		goesBatt = Batt * 100
		goesAT = AirTemp * 100
		goesATMAx = atMax * 100
		goesATMin = atMin * 100
		goesRH = RHumidity * 10
		goesBP = Pressure * 10
		goesPrecip = Precip * 1000
		goesPar = Par
		goesWSMax = wsMax * 100
		goesDailyRain = DailyRain*1000 '***

		'following must be called only after Fiftnmin table written to because
		'   values are generated by WindVector instruction
		goesWS = SWMP.WSpd*100
		goesWD = SWMP.Wdir*10
		goesWSD = SWMP.SDWDir*10

		CallTable GOESOUT
		CallTable UDEL

		'GOES Instructions
		'		send to transmitter at time atleast 2 minutes before transmit time
		If TimeintoInterval (38,60,Min) then
			GOESData (goesFailures,GOESOUT,0,1,2)
		endif

		'Run setup subroutine if GOESSetResult is anything other than 0
		if goesSetResult then call setup

		if TimeintoInterval(0,15,min) then	'After Min and Max are written by MaxMin sub
			atMin = 20000		'reset initial conditions for temp min and max and wind spd max
			atMax = -20000
			wsMax = -20000
		endif

		'reset all daily rain values to 0 every 24 hours
		if iftime(0,1440,min) then DailyRain = 0 '***
		If IfTime(0,1440,min) Then goesDailyRain = 0 '***
		
    'reset modem using control port 5
    'time on datalogger is local standard time
    If TimeIntoInterval (720,1440,min) Then PortSet(5,1)
    If TimeIntoInterval (721,1440,min) Then PortSet(5,0)
   

	NextScan
EndProg

