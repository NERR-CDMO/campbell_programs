'Modified December 17, 2014 by Tracy Buck. Removed Vaisala PTB110 BP sensor (SN: D4930017) and replaced with PTB101B BP sensor (SN: U1120009).  Commented out CS106 code and uncommented CS105 code.
'Modified December 17, 2014 by Tracy Buck.  Removed Eppley 8-48 pyranometer (SN: 28070) and replaced with Eppley 8-48 pyranometer (SN: 28078). Changed multiplier to 102.0408.
'Modified November 4, 2014 by Tracy Buck. Removed HC2S3 (SN: 61114965) and replaced with HC2S3 (SN: 61115408).
'Modified November 4, 2014 by Tracy Buck.  Removed LI-COR LI-190SB (SN: Q41803). Removed Apogee SQ110 (SN: 13334) and installed Apogee SQ110 (SN: 11198).
'Modified October 20, 2014 by Jeff Adams.  Due to switch from LI-COR PAR to Apogee PAR, Jeff removed all LI-COR programming and left only Apogee.
'Modified December 19, 2013 by Tracy Buck. Removed Vaisala PTB101B BP sensor (SN: U1120009) and installed PTB110 BP sensor (SN: D4930017). Commented out CS105 code & uncommented CS106 code in program.
'Modified December 19, 2013 by Tracy Buck.  Removed Eppley 8-48 pyranometer (SN: 28078) and installed Eppley 8-48 pyranometer (SN: 28070). Multiplier changed to 96.8054.
'Modified December 19, 2013 by Tracy Buck. Removed RM Young 05106-5A wind sensor SN: WM97356) and installed RM Young 05305-5A wind sensor (SN: WM65129).

'Modified August 26, 2013 by Tracy Buck.  Added revised temp/RH code for new HC2S3 temp/RH sensor (SN: 0061114965) installation and 'quoted out' old HMP45C code. Installed new 10-plate gill shield to replace old corroded shield.
'Modified August 26, 2013 by Tracy Buck.  Removed LI-COR LI-190SB (SN: Q41811) and installed LI-COR LI-190SB (SN: Q41803) (calibrated 7/15/13). Changed multiplier to 1.5133721.
'Modified August 26, 2013 by Tracy Buck.  Removed all program version #'s since V5.5 that had been entered into notes by Jay Poucher / Amy Willman.  Program to remain V5.5 with only changes to modification date.

'Modified: July 31, 2013 by Tracy Buck. Removed old enclosure humidity sensor and replaced with new enclosure humidity sensor (Model CS210, SN:167897) per recommended lifespan of sensor.
'Modified: July 31, 2013 by Tracy Buck. Removed Apogee quantum sensor (SN:11198) and replaced with new Apogee quantum sensor (SN:13334) - multiplier still = 5.
'Modified: July 31, 2013 by Tracy Buck. Changed SoRad from Totalize to Average in lines 212, 253, 265, and recalculated multiplier to give watts/m2 instead of Langleys (new multiplier = 101.5228).
'Previous programs' multipliers were calculated to give Langley's despite units being defined as watts/m2.

'Modified:  December 4, 2012 by Amy Willman.  Removed Licor SN#Q41803 and installed SN#Q41811.  Changed multiplier in line 353 to 1.499664.

'Modified:  July 5, 2012 by Amy Willman.  Program is the same as v9_031212.
'Modified:  July 5, 2012 by Amy Willman.  Reinstalling Licor SN#Q41803 (multiplier 1.5273) and Apogee SN#11198 after having them inspected and tested at Campbell by Jeff Adams.
'Modified:  July 5, 2012 by Amy Willman.  Removed Licor SN#Q41811.

'Modified:  Mar. 12, 2012 by Amy Willman.  Replaced Eppley cable
'Modified:  Mar. 12, 2012 by Amy Willman.  Replaced PAR sensor with SN#Q41803 and changed multiplier to 1.5273
'Modified:  Mar. 12, 2012 by Amy Willman.  Installed Apogee SQ110 SN#11198

'Modified:  December 2, 2011 by Amy Willman.  Replaced Eppley sensor with SN#28078 and changed multiplier to .1456
'Modified:  December 2, 2011 by Amy Willman.  Replaced BP sensor model CS106 with model CS105 SN#U1120009

'Last Modified: February 22, 2010 by Amy Willman
'Modified:  February 22, 2010 to accommodate a Fixed Par Mult of 1.271605 for new LI-190 SN# Q41803
'Modified:  February 22, 2010 removed HMP45C SN# U2520001 and replaced with HMP45C SN# A1710069

'Last Modified: September 28th, 2009 by Jay Poucher
'Modified: August 24th, 2009 to accommodate a CS-106 Pressure Sensor
'Modified: September 28th, 2009 to accommodate a Fixed Par Mult of 1.86
'Modified: September 28th, 2009 to accommodate a Fixed Epply Mult of .1384
'Modified: September 28th, 2009 to accommodate the 5106 wind sensor

'Version 5.5 changes, Search for '*** to display these additions
'Added 24 hour rain total (DailyRain) to SWMP table
'Applied a new Field Name for Daily Rain as CumPrcp
'Made GOESDailyRain = DailyRain*1000 output for transmission
'Added Variable GOESDailyRain & GoesPar to public
'Set Units for GOESDailyRain and DailyRain to mm
'Set Units for GOESPar to mmoles/m^2
'Applied a new Field Name for GOESDaily Rain as G_CumPrcp
'Reset DailyRain to Zero at midnight
'Reset GOESDailyRain to Zero at midnight
'Deleted the  If Par < 0 then Par is 0 line as per DMC 2007
'Changed "Day" to "Days" in Alias time(3) due to conflict with new CR1000 Firmware

'Site Specific Changes
'	09/24/2006
'   eppley pyrometer sensor changed from average to totalize in tables
'		eppley multiplier (eppMultiplier) added as public variable (need to set in public table after program loaded as with PAR)
'		changed 1 minute table to only record during rain event
'
'NERRS Site: North Inlet - Winyah Bay
'Location: Georgetown, SC
'Site: Oyster Landing
'NESDIS Assignments:
'ID=3B01F504
'Transmit Time = 1:20
'ST MsgWindow = 10 sec
'ST Channel = 145
'ST BPS = 300
'Random Channel = 0
'Random BPS = 0
'ST Repeat Interval = 1 hour
'ST Offset = 1 minute, 0 secs
'Random Repeat Interval = 0 hour

'Sensor list:
'HC2S3 temp/hum sensor
'CS106 Barometric Pressure Sensor
'CS105 Barometric Pressure Sensor On Standby
'Standby 06/01/07 RM Young 5106-5A Marine Wind Speed & Direction Sensor
'RM Young 3001-5 Wind Speed & Direction Sensor measurements WS_ms and WindDir:
'TE525/TE525WS Rain Gauge
'LI190SB/SZ Quantum Par Sensor
'Apogee Quantum Par Sensor SQ110-L-10
'8-48 Eppley Total Radiation Sensor
'CS210 Enclosure RelHum

'Holds Sensor Calibration Settings for Easy Access in the Numeric Display
PreserveVariables

'For Easy Site Identification in the Data Header (Parceable)
StationName (niwolmet)

'Time offset for GMT time
'http://wwp.greenwichmeantime.com/
Const GMToffset=5

'Declare Public Variables
'  Parameters directly sampled by sensors
Public AirTemp, RHumidity, Pressure, WindSpd, WindDir, Precip, PAR, Batt, APAR_Den
Public pTempC, DailyRain, SoRad '***
Public EnclosureRH 	     'uncomment if relative humidity sensor installed in enclosure

' GOES output variables
Public GoesSetResult,GoesFailures,gpsLoc(6),gpsTime(7), WindGood As Boolean

' Variables used in max and min subroutine and to calculate timestamps
Public atMax,atMaxTime,atMin,atMinTime,wsMax,wsMaxTime
Public atMaxTimeSwmp As String,atMinTimeSwmp As String,wsMaxTimeSwmp As String

' Variables used for integer translations in the GOES Output
Public goesAT,goesATMax,goesATMin,goesRH,goesBP,goesWS,goesWD,goesWSD,goesWSMax,goesPar,goesPrecip,goesBatt,goesSoRad,goesDailyRain '***

Public Time(9) ' array to store time

'set variable names for array fields to make more readable in public table
Alias Time(1) = Year
Alias Time(2) = Month
Alias Time(3) = Days
Alias Time(4) = Hour
Alias Time(5) = Minute
Alias Time(6) = Second
Alias Time(7) = Microsecond
Alias Time(8) = DayofWeek
Alias Time(9) = DayofYear

Alias gpsTime(1) = gYear
Alias gpsTime(2) = gMonth
Alias gpsTime(3) = gDay
Alias gpsTime(4) = gHour
Alias gpsTime(5) = gMinute
Alias gpsTime(6) = gSecond
Alias gpsTime(7) = gMicroSecond

Alias gpsLoc(1) = gpsResult 	'GOESgps instruction result code
Alias gpsLoc(2) = gpsSeconds 	'seconds since Jan 1, 2000
Alias gpsLoc(3) = gpsLat  		'Fractional degrees; 100 nanodegree resolution
Alias gpsLoc(4) = gpsLon			'Fractional degrees; 100 nanodegree resolution
Alias gpsLoc(5) = gpsElev  		'Signed 32-bit number, in centimeters
Alias gpsLoc(6) = gpsMagElev  'Fractional degrees; 1 millidegree resolution

'Define units for SWMP data table output
Units AirTemp = C
Units atMax = C
Units atMin = C
Units RHumidity = %
Units Pressure = mb
Units WindSpd = m/s
Units WindDir = deg
Units	Precip = mm
Units PAR = mmoles/m^2
Units APAR_Den =umoles/s /m^2
Units Batt = Volts
Units	DailyRain = mm '***
Units SoRad = watts/m^2

'Define units of max/min timestamps used in SWMP table
Units atMaxTimeSwmp = hhmm
Units atMinTimeSwmp = hhmm
Units wsMaxTimeSwmp = hhmm
'Define units of max/min timestamps used in GOES table
Units atMaxTime = hhmm
Units atMinTime = hhmm
Units wsMaxTime = hhmm

'Define units for GOES data table output
Units goesAT = C
Units goesATMax = C
Units goesATMin = C
Units goesRH = %
Units goesBP = mb
Units goesWS = m/s
Units goesWD = Deg
Units goesWSD = m/s
Units goesWSMax = m/s
Units goesPrecip = mm
Units goesBatt = Volts
Units	goesDailyRain = mm '***
Units goesPar = mmoles/m^2 '***
Units goesSoRad = watts/m^2

'''Define Data Tables:
' The SWMP data table definition:
DataTable (SWMP,1,-1)
  DataInterval (0,15,min,10)
  Average (1,AirTemp,IEEE4,False)
  FieldNames("ATemp") 'instruction is used to output desired fieldnames in output table headers
  Sample (1,atMax,IEEE4)
  FieldNames("MaxTemp")
  Sample (1,atMaxTimeSwmp,String)
  FieldNames ("MaxTempT")
  Sample (1,atMin,IEEE4)
  FieldNames("MinTemp")
  Sample (1,atMinTimeSwmp,String)
  FieldNames("MinTempT")
  Average (1,RHumidity,IEEE4,False)
  FieldNames("RH")
  Average (1,Pressure,IEEE4,False)
  FieldNames("BP")
  WindVector (1,WindSpd,WindDir,IEEE4,WindGood,0,0,0)'MOD**
  FieldNames("WSpd,Wdir,SDWDir")
  Sample (1,wsMax,IEEE4)
  FieldNames("MaxWSpd")
  Sample (1,wsMaxTimeSwmp,String)
  FieldNames("MaxWSpdT")
  Totalize (1,Precip,IEEE4,False)
  FieldNames("TotPrcp")
  Totalize(1,PAR,IEEE4,False)
  FieldNames("TotPAR")
  Average (1,APAR_Den,IEEE4,False)
  FieldNames ("AvgFluxDensity_Apogee")
  Average (1,Batt,IEEE4,False)
  FieldNames("AvgVolt")
  Sample(1,DailyRain,IEEE4) '***
  FieldNames("CumPrcp") '***
  Average (1,SoRad,IEEE4,False)
  FieldNames("SoRad")
  Sample(1,EnclosureRH,IEEE4)
  FieldNames("EncloseRH")
EndTable

' The Goes Output Data Table Def
DataTable (GOESOUT,1,-1)
  DataInterval (0,15,min,10)
  Average(1,goesAT,IEEE4,False)
  FieldNames("G_ATemp")
  Sample(1,goesATMax,IEEE4)
  FieldNames("G_MaxTemp")
  Sample(1,atMaxTime,IEEE4)
  FieldNames("G_MaxTempT")
  Sample(1,goesATMin,IEEE4)
  FieldNames("G_MinTemp")
  Sample(1,atMinTime,IEEE4)
  FieldNames("G_MinTempT")
  Average (1,goesRH,IEEE4,False)
  FieldNames("G_RH")
  Average (1,goesBP,IEEE4,False)
  FieldNames("G_BP")
  Sample (1,goesWS,IEEE4)
  FieldNames("G_WSpd")
  Sample (1,goesWD,IEEE4)
  FieldNames("G_Wdir")
  Sample (1,goesWSD,IEEE4)
  FieldNames("G_SDWDir")
  Sample(1,goesWSMax,IEEE4)
  FieldNames("G_MaxWSpd")
  Sample(1,wsMaxTime,IEEE4)
  FieldNames("G_MaxWSpdT")
  Totalize (1,goesPrecip,IEEE4,False)
  FieldNames("G_TotPrcp")
  Totalize (1,goesPar,IEEE4,False)
  FieldNames("G_TotPAR")
  Average (1,goesBatt,IEEE4,False)
  FieldNames("G_AvgVolt")
  Sample(1,goesDailyRain,IEEE4) '***
  FieldNames("G_CumPrcp") '***
  Average (1,goesSoRad,IEEE4,False)
  FieldNames("G_SoRad")
EndTable

'Five Min Table
DataTable (A5Min,True,-1)
  DataInterval(0,5,Min,10)
  Average(1,Batt,IEEE4,False)
  Average(1,AirTemp,IEEE4,False)
  Sample(1,RHumidity,IEEE4)
  Totalize(1,PAR,IEEE4,False)
  Average (1,APAR_Den,IEEE4,False)
  Average(1,WindSpd,IEEE4,False)
  Sample(1,WindDir,IEEE4)
  Average(1,SoRad,IEEE4,False)
  Maximum (1,EnclosureRH,IEEE4,False,False)
EndTable

'One Min Table Precip   'changed to record only when ppt event
DataTable (A1Min,True,-1)
  DataInterval(0,1,Min,10)
  DataEvent(0,Precip>0,Precip<=0,0)'record only records where rainfall > 0
  Totalize(1,Precip,IEEE4,False)
EndTable

Sub MaxMin	' calculated max/min and timestamps for SWMP table (goes integer values are derived from)
  If AirTemp < atMin Then 	'Track Min and time of Min air temp
    atMin = AirTemp
    RealTime(Time())
    atMinTime = Hour*100+Minute 'time formatted as integer for GOES table
    atMinTimeSwmp = Hour + ":" + Minute 'time formatted as string for SWMP table
  EndIf
  If AirTemp > atMax Then	'Track Max and time of Max air temp
    atMax = AirTemp
    RealTime(Time())
    atMaxTime = Hour*100+Minute
    atMaxTimeSwmp = Hour + ":" + Minute
  EndIf
  If WindSpd > wsMax Then	'Track Max and time of max wind
    wsMax = WindSpd
    RealTime(Time())
    wsMaxTime = Hour*100+Minute
    wsMaxTimeSwmp = Hour + ":" + Minute
  EndIf
EndSub

'The setup for the TX312 transmitter
Sub setup
  GOESSetup (GoesSetResult,&H3b01f504,10,145,300,0,100,"0_1_0_0","0_1_20","0_0_0")
EndSub

'Main Program
BeginProg
  'Initialize Min & Max Variables
  atMin = 20000
  atMax = -20000
  wsMax = -20000
  'initialize so goes setup subroutine will be called on first run of program
  GoesSetResult = -1
  'Scan Rate
  Scan (5,Sec,0,0)

    'Reference Temperature and Battery Voltage
    PanelTemp (pTempC,250)
    Battery (Batt)

    'HMP45C (6 or 7-wire) Temperature & Relative Humidity Sensor measurements AirTC and RH:
    'PortSet (9,1)
    'Delay(0,150,mSec)
    'VoltSe(AirTemp,1,mV2500,1,0,0,_60Hz,0.1,-40.0)
    'VoltSe(RHumidity,1,mV2500,2,0,0,_60Hz,0.1,0)
    'PortSet (9,0)

    'HC2S3 Temperature & Relative Humidity Sensor measurements AirTC and RH:
    PortSet (9,1)
    Delay(0,3,Sec) 'Delay set to 3 seconds
    VoltSe(AirTemp,1,mV2500,1,0,0,_60Hz,0.1,-40.0)
    VoltSe(RHumidity,1,mV2500,2,0,0,_60Hz,0.1,0)
    PortSet (9,0)

    'Measure Vaisala CS106 Barometric Pressure "Pressure" On All the Time
    'VoltSe(Pressure,1,mV2500,3,False,0,_60Hz,.240,500)

    'Measure Vaisala CS105 Barometric Pressure "Pressure" On All the Time
    VoltSe(Pressure,1,mV2500,3,1,0,_60Hz,.184,600)

    '05106 Wind Speed & Direction Sensor measurements WS_ms and WindDir:
    PulseCount(WindSpd,1,1,1,1,0.098,0)
    If WindSpd = NAN Then
      WindGood = true
    Else
      WindGood = false
    EndIf
    BrHalf(WindDir,1,mV2500,4,1,1,2500,True,0,_60Hz,355,0)
    If WindDir>=360 Then WindDir=0

    '3001-5 Wind Speed & Direction Sensor measurements WS_ms and WindDir:
    'PulseCount(WindSpd,1,1,1,1,0.75,0.2)
    'if WindSpd = NAN then
    '	WindGood = true
    'else
    '	WindGood = false
    'endif
    'BrHalf(WindDir,1,mV2500,4,1,1,2500,True,0,_60Hz,355,0)
    'If WindDir>=360 Then WindDir=0

    'TE525 Precipitation measurement "Precip" mm
    PulseCount(Precip,1,2,2,0,.254,0)
    DailyRain = DailyRain+Precip '***

    'Eppley Pyranometer measurements SoRad:
    VoltSe(SoRad,1,mV25,7,1,0,_60Hz,102.0408,0)

    ' CS210 Enclosure Relative Humidity Sensor
    VoltSe(EnclosureRH, 1,mV2500,8,1,0,_60hz,0.1,0)

    'Apogee SQ-110 Quantum sensor PAR
    'measurement
    'APAR_Den is the Flux Density
    'in umoles/s/m^2
    'PAR is Total Flux for 5 second
    'scan in mmoles/m^2
    'Red-SE9, Black-SE10, Clear-Ground
    VoltDiff (APAR_Den,1,mV2500,5,True ,0,_60Hz,1,0)
    PAR=APAR_Den*0.025
    APAR_Den=APAR_Den*5.0



    'Reset station clock using GPS clock
    If TimeIntoInterval (722,1440,min) Then	'at two minutes past noon set clock to gps clock
      GOESGPS (gpsLoc(),gpsTime())
      If gpsResult=0AND gHour<24AND gHour>=0AND gMinute<60AND gMinute>=0AND gSecond<60AND gSecond>=0 Then
        gHour = gHour - GMToffset 'adjust clock in GMT to local time
        If gHour<0 Then
          gHour=gHour+24
        EndIf
        ClockSet (gpsTime())
      EndIf
    EndIf

    Call MaxMin		'track airTempMax, airTempMin, wsMax and times

    CallTable SWMP
    CallTable A5Min 'Call site specific tables
    CallTable A1Min

    'Convert and store as integers for GOES transmission (only those not already integers)
    goesBatt = Batt * 100
    goesAT = AirTemp * 100
    goesATMax = atMax * 100
    goesATMin = atMin * 100
    goesRH = RHumidity * 10
    goesBP = Pressure * 10
    goesPrecip = Precip * 1000
    goesPar = PAR
    goesWSMax = wsMax * 100
    goesDailyRain = DailyRain*1000 '***
    goesSoRad = SoRad * 100

    'following must be called only after Fiftnmin table written to because
    '   values are generated by WindVector instruction
    goesWS = SWMP.WSpd*100
    goesWD = SWMP.Wdir*10
    goesWSD = SWMP.SDWDir*10

    CallTable GOESOUT

    'GOES Instructions
    '		send to transmitter at time atleast 2 minutes before transmit time
    If TimeIntoInterval (59,60,Min) Then
      GOESData (GoesFailures,GOESOut,0,1,2)
    EndIf

    'Run setup subroutine if GOESSetResult is anything other than 0
    If GoesSetResult Then Call setup

    If TimeIntoInterval(0,15,min) Then	'After Min and Max are written by MaxMin sub
      atMin = 20000		'reset initial conditions for temp min and max and wind spd max
      atMax = -20000
      wsMax = -20000
    EndIf

    'reset all daily rain values to 0 every 24 hours
    If IfTime(0,1440,min) Then DailyRain = 0 '***
    If IfTime(0,1440,min) Then goesDailyRain = 0 '***

  NextScan
EndProg

