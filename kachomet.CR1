'Version 7.4; modified June 10, 2014 by Ori Badajos
'Changed PAR multiplier from 1.320278 (Q34395) to 1.226392 (Q30035)
'Version 7.3
'last modified June 27, 2013 by Ori Badajos
'changed TotRad multiplier from 18.9654 to 200 (also changed instrument from Li-200SZ to Li-200x)
'in TotRad line change from mV2500 to mV7_5 (higher resolution)

'Version 7.2
'last modified October 16, 2012 by Ori Badajos
'changed PAR multiplier from 1.19973 (Q30035) to 1.320278 (Q34395)

'Version 7.1
'last modified February 14th, 2010 by Joel Markis
'changed GOES store as intergers table (deleted *100) for TotSoRAD parameter

'last modified August 25th, 2010 by Joel Markis
'Added Pyranometer sensor and inserted calibration constant of 18.9654 changed units of PAR "mmoles/m^2^ and TotSoRAD "watts/m^2" in SWMP and GOES tables

'Last Modified: April 15th, 2010 by Jay Poucher & Joel Markis

'Version 6.8 changes, changed program to transmit on KACHOMET window not TJNERR.
'Swaped out PAR and Pyronometer sensors for 2 calibrated PAR sensors and made changes to sensor programing accordingly. 

'Version 6.6 changes, adopted the 2009 DMC guidelines and added the fixed par and solar radiation multipliers directly into those measurements
'Par Multiplier used on 04/13/10 is 1.333 mmoles per Meter squared
'SoRad multiplier used on 04/13/10 is 102.88 watts per meter squared Averaged in both SWMP and GoesOut

'Version 5.6 changes, 
'Added Cardout to SWMP table to accommodate the nl115 
'Changed active sensor list to show MetOne rainguadge not TE

'Version 5.5 changes, Search for '*** to display these additions
'Added 24 hour rain total (DailyRain) to SWMP table
'Applied a new Field Name for Daily Rain as CumPrcp
'Made GOESDailyRain = DailyRain*1000 output for transmission
'Added Variable GOESDailyRain & GoesPar to public
'Set Units for GOESDailyRain and DailyRain to mm
'Set Units for GOESPar to mmoles/m^2
'Applied a new Field Name for GOESDaily Rain as G_CumPrcp
'Reset DailyRain to Zero at midnight
'Reset GOESDailyRain to Zero at midnight
'Deleted the  If Par < 0 then Par is 0 line as per DMC 2007
'Changed "Day" to "Days" in Alias time(3) due to conflict with new CR1000 Firmware

' Version 4.0 changes:
' Cut RAD from SWMP table
' Copied the swmp table, pasted & renamed it Kachemak.
' Used for Visitor's Center US Units Only
' New Rad Table for PAR/RAD data set

' June 21st, 2007 by Jay Poucher
' Add check on wind speed. If NAN, don't include sample is processing for
' wind vector instruction. Reason: clock set function causing 1 bad wind sample per day
' which causes one bad wind summery per day. Added variable WindGood as boolean, set true
' or false after wind speed pulse read in struction. WindGood is used as the process
' disable variable in the Windvector() function. Search for MOD** to see changes

'Version 3.0 changes
' 08/30/2006 
'		Changes made as requested by the Data Management Committee:
'		- fiftnmin table name changed to SWMP
'		- Relative humidity min/max, pressure min/max, wind speed min and time fields were dropped
'		- fieldnames instructions added to SWMP data table to generate consistent with cr10x/CDMO fieldnames
'		- RHumidity > 100 and PAR < 0 instructions dropped, over or under values will be handled post processing
'		- subroutine now used to generate min/max values and times for both SWMP and GOESOUT tables 
'		Additonal changes made:
'		- revision of variable names within program for consistency and improved readability
'		- Units instructions were added to enable output of parameter units in data table headers 
'				when using TOA5 long header ASCII download format
' 09/11/2006
'		- Added colon to max/min timestamps in SWMP table
'		- Added fieldnames instructions to GOES table (GOES field names same as SWMP with 'G_' prepended)
'
'Site Specific Changes:
'	09/24/2006
'		-Enabled total radiation sensor: Set multiplier using totRadMultiplier in public table

'NERRS Site: Kachemak Bay
'Location: Homer, Alaska
'Site: Homer
'NESDIS Assignments:
'ID=3B00140C
'Transmit Time (mm:ss after the hour) = 34:20
'ST MsgWindow = 10
'ST Channel = 152
'ST BPS = 300
'Random Channel = 0
'Random BPS = 0
'ST Repeat Interval = 1 hour
'ST Offset = 34 minute, 40 secs  
'Random Repeat Interval = 0 hour

'Active Sensor list:
'HMP45C (7-wire) Temperature & Relative Humidity (se1 se2 c1)
'Campbell CS105 (PTB101B) Barometric Pressure Sensor (se3)
'Campbell 5103 Wind Speed & Direction Sensor (p1 se4 ex1)
'Met One 385C Rain Gauge (p2)
'LI190SB Quantum Sensor (diff3 == se5 se6)
'LI200 Pyranometer (diff4)

'Holds Sensor Calibration Settings for Easy Access in the Numeric Display
PreserveVariables

'For Easy Site Identification in the Data Header (Parseable)
StationName (kachomet)

'Time offset for GMT time
'http://wwp.greenwichmeantime.com/
const GMTOFFSET=9

'Declare Public Variables
'  Parameters directly sampled by sensors
Public AirTemp, RHumidity, Pressure, WindSpd, WindDir, Precip, PAR, Batt, WindGood As Boolean'MOD**
Public TotalRad,pTempC, DailyRain '***

'EnclosureRH 	     'uncomment if relative humidity sensor installed in enclosure

' GOES output variables 
Public goesSetResult,goesFailures,gpsLoc(6),gpsTime(7)

' Variables used in max and min subroutine and to calculate timestamps 
Public atMax,atMaxTime,atMin,atMinTime,wsMax,wsMaxTime
Public atMaxTimeSwmp as string,atMinTimeSwmp as string,wsMaxTimeSwmp as string

'	Variables for US Units Measurements
Public AirTempF, WindSpeedMPH, Gust, PrecipI, CumPrcpI

' Variables used for integer translations in the GOES Output
Public GoesAT,goesATMax,goesATMin,goesRH,goesBP,goesWS,goesWD,goesWSD,goesWSMax,goesPar,goesPrecip,goesBatt,goesDailyRain,GoesTotSoRad '***

Public Time(9) 'array to store time

'set variable names for array fields to make more readable in public table
Alias Time(1) = Year
Alias Time(2) = Month
Alias Time(3) = Days
Alias Time(4) = Hour
Alias Time(5) = Minute
Alias Time(6) = Second
Alias Time(7) = Microsecond
Alias Time(8) = DayofWeek
Alias Time(9) = DayofYear

Alias gpsTime(1) = gYear
Alias GPSTime(2) = gMonth
Alias gpsTime(3) = gDay
Alias GPSTime(4) = gHour
Alias gpsTime(5) = gMinute
Alias GPSTime(6) = gSecond
Alias gpsTime(7) = gMicroSecond   

Alias gpsLoc(1) = gpsResult 	'GOESgps instruction result code
Alias GPSLoc(2) = gpsSeconds 	'seconds since Jan 1, 2000
Alias gpsLoc(3) = gpsLat  		'Fractional degrees; 100 nanodegree resolution
Alias GPSLoc(4) = gpsLon			'Fractional degrees; 100 nanodegree resolution
Alias gpsLoc(5) = gpsElev  		'Signed 32-bit number, in centimeters
Alias GPSLoc(6) = gpsMagElev  'Fractional degrees; 1 millidegree resolution 

'Define units for SWMP data table output
Units AirTemp = C
Units atMax = C
Units atMin = C
Units RHumidity = %
Units Pressure = Millibars
Units WindSpd = m/s
Units WindDir = deg
Units	Precip = mm
Units PAR = mmoles/m^2
Units Batt = Volts
Units DailyRain = mm '***
Units TotalRad = watts/m^2

'Define units of max/min timestamps used in SWMP table
Units atMaxTimeSwmp = hhmm
Units atMinTimeSwmp = hhmm 
Units wsMaxTimeSwmp = hhmm

'Define units of max/min timestamps used in GOES table
Units atMaxTime = hhmm
Units atMinTime = hhmm  
Units wsMaxTime = hhmm

'Define units for GOES data table output
Units goesAT = C
Units goesATMax = C
Units goesATMin = C
Units goesRH = %
Units goesBP = mb
Units goesWS = m/s
Units goesWD = Deg
Units goesWSD = m/s
Units goesWSMax = m/s
Units goesPrecip = mm
Units goesBatt = Volts
Units goesDailyRain = mm '***
Units goesPar = mmoles/m^2 '***
Units GoesTotSoRad = watts/m^2

'	US Unit Definitions
Units AirTempF = DegreesF
Units WindSpeedMPH = MPH
Units Gust = MPH
Units PrecipI = Inches
Units CumPrcpI = Inches

'''Define Data Tables:
' The SWMP data table definition:
DataTable (SWMP,1,-1)
CardOut (0, -1000)
	DataInterval (0,15,min,10)
	Average (1,AirTemp,IEEE4,False)
	Fieldnames("ATemp") 'instruction is used to output desired fieldnames in output table headers
	Sample (1,atMax,IEEE4)
	Fieldnames("MaxTemp")
	Sample (1,atMaxTimeSwmp,String)
	Fieldnames ("MaxTempT")
	Sample (1,atMin,IEEE4)
	Fieldnames("MinTemp")
	Sample (1,atMinTimeSwmp,String)
	Fieldnames("MinTempT")
	Average (1,RHumidity,IEEE4,False)
	Fieldnames("RH")
	Average (1,Pressure,IEEE4,False)
	Fieldnames("BP")
	WindVector (1,WindSpd,WindDir,IEEE4,WindGood,0,0,0)'MOD**
	Fieldnames("WSpd,Wdir,SDWDir")
	Sample (1,wsMax,IEEE4)
	Fieldnames("MaxWSpd")
	Sample (1,wsMaxTimeSwmp,String)
	Fieldnames("MaxWSpdT")
	Totalize (1,Precip,IEEE4,False)
	Fieldnames("TotPrcp")
	Totalize(1,PAR,IEEE4,False)
	FieldNames("TotPAR")
	Average (1,Batt,IEEE4,False)
	Fieldnames("AvgVolt")
	Sample(1,DailyRain,IEEE4) '***
	FieldNames("CumPrcp") '***
	Average (1,TotalRad,IEEE4,False)
	FieldNames)"TotSoRad")
EndTable

' The Goes Output Data Table Def
DataTable (GOESOUT,1,-1)
	DataInterval (0,15,min,10)
	Average(1,goesAT,IEEE4,False)
	Fieldnames("G_ATemp")
	Sample(1,goesATMax,IEEE4)
	Fieldnames("G_MaxTemp")
	Sample(1,atMaxTime,IEEE4)
	Fieldnames("G_MaxTempT")
	Sample(1,goesATMin,IEEE4)
	Fieldnames("G_MinTemp")
	Sample(1,atMinTime,IEEE4)
	Fieldnames("G_MinTempT")
	Average (1,goesRH,IEEE4,False)
	FieldNames("G_RH")
	Average (1,goesBP,IEEE4,False)
	Fieldnames("G_BP")
	Sample (1,goesWS,IEEE4)
	Fieldnames("G_WSpd")
	Sample (1,goesWD,IEEE4)
	Fieldnames("G_Wdir")
	Sample (1,goesWSD,IEEE4)
	Fieldnames("G_SDWDir")
	Sample(1,goesWSMax,IEEE4)
	Fieldnames("G_MaxWSpd")
	Sample(1,wsMaxTime,IEEE4)
	Fieldnames("G_MaxWSpdT")
	Totalize (1,goesPrecip,IEEE4,False)
	Fieldnames("G_TotPrcp")
	Totalize (1,goesPar,IEEE4,False)
	FieldNames("G_TotPAR")
	Average (1,goesBatt,IEEE4,False)
	Fieldnames("G_AvgVolt")
	Sample(1,goesDailyRain,IEEE4) '***
	FieldNames("G_CumPrcp") '***
	Average (1,GoesTotSoRad,IEEE4,False)
	FieldNames)"G_TotSoRad")
EndTable

 'The Kachemak Latest Obs data table definition:
DataTable (Latest,1,-1) 
	DataInterval (0,15,min,10)
	Average (1,AirTempF,IEEE4,False)
		Fieldnames("AirTempF")
	Average (1,RHumidity,IEEE4,False)
		Fieldnames("RH")
	Average (1,WindSpeedMPH,IEEE4,False)
		Fieldnames("WindSpeed") 		
	Sample (1,WindDir,IEEE4)
		Fieldnames("WindDir") 		
	Sample (1,Gust,IEEE4)
		Fieldnames("Gust")
	Average (1,Pressure,IEEE4,False)
		FieldNames("BP")
	Totalize (1,CumPrcpI,IEEE4,False)
		FieldNames("DailyPrecip")
EndTable

Sub MaxMin	' calculated max/min and timestamps for SWMP table (goes integer values are derived from)
	If AirTemp < atMin Then 	'Track Min and time of Min air temp
		atMin = AirTemp
		RealTime(time())
		atMinTime = Hour*100+Minute 'time formatted as integer for GOES table
		atMinTimeSwmp = Hour + ":" + Minute 'time formatted as string for SWMP table
	endif
	If AirTemp > atMax then	'Track Max and time of Max air temp
		atMax = AirTemp
		Realtime(time())
		atMaxTime = Hour*100+Minute
		atMaxTimeSwmp = Hour + ":" + Minute
	endif
	If WindSpd > wsMax then	'Track Max and time of max wind
		wsMax = WindSpd
		RealTime(time())
		wsMaxTime = Hour*100+Minute
		wsMaxTimeSwmp = Hour + ":" + Minute
	endif
endsub

'The setup for the GOES TX312 transmitter
Sub setup
	GOESSetup (goesSetResult,&H3B00140C,10,152,300,0,100,"0_1_0_0","0_34_20","0_0_0")
endsub

'Main Program
BeginProg
	'Initialize Min & Max Variables
	atMin = 20000
	atMax = -20000
	wsMax = -20000
	
	'initialize so goes setup subroutine will be called on first run of program
	goesSetResult = -1
	
	'Scan Rate
	Scan (5,Sec,0,0)

'''Begin sensor settings

		'Reference Temperature and Battery Voltage measurements
		'"PTempC" in C and "Batt" in Volts:
		PanelTemp (PTempC,250)
		Battery (Batt)

		'HMP45C (7-wire switched mode) Temperature & Relative Humidity Sensor measurements:
		'"Air_Temp" in C & "RHumidity" in %:
		portset(1,1)
		Delay(0,150,mSec)
		VoltSE(AirTemp,1,mV2500,1,0,0,_60Hz,0.1,-40.0)
		VoltSE(RHumidity,1,mV2500,2,0,0,_60Hz,0.1,0)
		portset(1,0)
		AirTempF = (AirTemp*1.8)+32 'English Units

		'CS105 (continuous power mode) Barometric Pressure Sensor measurement
		'"Pressure" in mb
		VoltSE(Pressure,1,mV2500,3,1,0,_60Hz,0.184,600.0)
		
		'05103 Wind Speed & Direction Sensor measurements 
		'"WindSpd" in mps and "Wind_Dir" in degrees:
		PulseCount(WindSpd,1,1,1,1,0.098,0)
		BrHalf(WindDir,1,mV2500,4,1,1,2500,True,0,_60Hz,355,0)
		If WindDir>=360 Then WindDir=0
		if WindSpd = NAN then'MOD**
			WindGood = true'MOD**
		else'MOD**
			WindGood = false'MOD**
		endif'MOD**
		WindSpeedMPH = Windspd*2.24 'English units
		Gust = WSMax*2.24
		
		'MET ONE 385C Rain Gauge measurement
		'"Precip" in mm:
		PulseCount(Precip,1,2,2,0,0.254,0)
		DailyRain = DailyRain+Precip '***
		PrecipI=Precip*.03937
		CumPrcpI=PrecipI+CumprcpI

		'LI190SB Quantum Sensor measurements
		'"PAR" in mmoles/m^2 :
		VoltDiff(PAR,1,mV25,3,True,0,_60Hz,1.226392,0)
		
		'LI200 Pyranometer measurements
		'"Total_Rad" in watts/m^2:
		VoltDiff(TotalRad,1,mV7_5,4,True,0,_60Hz,200,0)
				
'''end sensor setttings 

		'Reset station clock using GPS clock
		If TimeintoInterval (722,1440,min) then	'at two minutes past noon set clock to gps clock
			GOESGPS (gpsloc(),gpsTime())
			if gpsResult=0and gHour<24and gHour>=0and gMinute<60and gMinute>=0and gSecond<60and gSecond>=0 then
				gHour = gHour - GMTOFFSET 'adjust clock in GMT to local time
				if gHour<0 then
					gHour=gHour+24
				endif
				ClockSet (GPSTime())
			Endif
		endif
		call MaxMin		'track airTempMax, airTempMin, wsMax and times
		
		CallTable SWMP

		'Convert and store as integers for GOES transmission (only those not already integers)
		goesBatt = Batt * 100
		goesAT = AirTemp * 100
		goesATMAx = atMax * 100
		goesATMin = atMin * 100
		goesRH = RHumidity * 10
		goesBP = Pressure * 10
		goesPrecip = Precip * 1000
		goesPar = PAR
		goesWSMax = wsMax * 100
		goesDailyRain = DailyRain*1000 '***
		GoesTotSoRad = TotalRad 
		
		'following must be called only after Fiftnmin table written to because 
		'   values are generated by WindVector instruction
		goesWS = SWMP.WSpd*100
		goesWD = SWMP.Wdir*10
		goesWSD = SWMP.SDWDir*10

		CallTable GOESOUT
		CallTable Latest
		
		'GOES Instructions
		'		send to transmitter at 32 min after hour (2 min before assigned transmit time)
		If TimeintoInterval (32,60,Min) then
			GOESData (GOESFailures,GOESOut,0,1,2)
		endif
		
		'Run setup subroutine if GOESSetResult is anything other than 0
		if GOESSetResult then call setup

		if TimeintoInterval(0,15,min) then	'After Min and Max are written by MaxMin sub
			atMin = 20000		'reset initial conditions for temp min and max and wind spd max
			atMax = -20000
			wsMax = -20000
		endif
		
		'Reset CumPrcpI values to 0 every 24 hours
		if iftime(0,1440,min) then CumPrcpI =0

		'reset all daily rain values to 0 every 24 hours
		If IfTime(0,1440,min) Then DailyRain = 0 '***
		if iftime(0,1440,min) then goesDailyRain = 0 '***
		
	NextScan
EndProg

